#
# $Id: makstand 120 2011-03-09 13:16:17Z vintage $
#
# Envionment Variables
#           LWPR_ENV_RELEASE
#           LWPR_ENV_ARCH=32/64
#


LWPR_ENV_ARCH:=$(shell getconf LONG_BIT)



CC              = g++
LD              = g++
AR              = ar rvuc
RM              = rm -f
CP              = cp
ECHO            = @echo

OSBIT           =
DEBUG           = -g

DLLFIX          = .so
SLBFIX          = .a

EXEDIR          = $(TOPDIR)/bin
DLLDIR          = $(TOPDIR)/lib
SLBDIR          = $(TOPDIR)/lib

TAREXE          = $(EXEDIR)/$(APPNAME)
TARDLL          = $(DLLDIR)/lib$(APPNAME)$(OSBIT)$(DLLFIX)
TARSLB          = $(SLBDIR)/lib$(APPNAME)$(OSBIT)$(SLBFIX)

INCDIRS         = -I. -I$(TOPDIR)/include
LIBDIRS         = -L$(TOPDIR)/lib

DEFAULT_LIBS    = -ldl -lpthread

ifeq ($(LWPR_ENV_ARCH),64)
    CMP_ARCH = -m64
    DEF_ARCH = -DARCH64
else
    CMP_ARCH = -march=i686 -m32
    DEF_ARCH = -DARCH32
endif

ifdef LWPR_ENV_RELEASE
    DEBUG       = -O
    DEF_FLAGS   = -DLINUX -D_REENTRANT $(DEF_ARCH) -DNDEBUG
else
    DEBUG       = -g
    DEF_FLAGS   = -DLINUX -D_REENTRANT $(DEF_ARCH)
endif

################### cpp program #############################
EXE_COMPILE     = $(DEBUG) -Wall -Wno-format-y2k $(CMP_ARCH) $(DEF_FLAGS) $(INCDIRS)
EXE_LINK        = $(DEBUG) -Wall -Wno-format-y2k $(CMP_ARCH) $(LIBDIRS) $(DEFAULT_LIBS)
SLB_COMPILE     = $(EXE_COMPILE)
SLB_LINK        = $(CMP_ARCH)
DLL_COMPILE     = $(DEBUG) -fPIC -Wall -Wno-format-y2k $(CMP_ARCH) $(DEF_FLAGS) $(INCDIRS)
DLL_LINK        = $(DEBUG) -fPIC $(CMP_ARCH) -shared $(LIBDIRS) $(DEFAULT_LIBS)

ifeq ($(APP_BUILDTYPE),bldexe)
    CMP_FLGS = $(EXE_COMPILE)
    TAR_NAME = $(TAREXE)
endif

ifeq ($(APP_BUILDTYPE),blddll)
    CMP_FLGS = $(DLL_COMPILE)
    TAR_NAME = $(TARDLL)
endif

ifeq ($(APP_BUILDTYPE),bldslb)
    CMP_FLGS = $(SLB_COMPILE)
    TAR_NAME = $(TARSLB)
endif

################### c program #############################
EXE_COMPILE_C    = $(DEBUG) -fPIC -O2 -Wall -fno-strict-aliasing $(DEF_FLAGS) $(INCDIRS)
EXE_LINK_C       = $(DEBUG) -fPIC -O2 -Wall -fno-strict-aliasing $(LIBDIRS) $(DEFAULT_LIBS)
SLB_COMPILE_C    = $(EXE_COMPILE_C)
SLB_LINK_C       =
DLL_COMPILE_C    = $(EXE_COMPILE_C)
DLL_LINK_C       = $(DEBUG) -fPIC -shared $(DEFAULT_LIBS)

ifeq ($(APP_BUILDTYPE),bldexe_c)
    CC = gcc
    LD = gcc
    CMP_FLGS = $(EXE_COMPILE_C)
    TAR_NAME = $(TAREXE)
endif

ifeq ($(APP_BUILDTYPE),blddll_c)
    CC = gcc
    LD = gcc
    CMP_FLGS = $(DLL_COMPILE_C)
    TAR_NAME = $(TARDLL)
endif

ifeq ($(APP_BUILDTYPE),bldslb_c)
    CC = gcc
    LD = gcc
    CMP_FLGS = $(SLB_COMPILE_C)
    TAR_NAME = $(TARSLB)
endif

bldexe: $(TAREXE)
blddll: $(TARDLL)
bldslb: $(TARSLB)

bldexe_c: $(TAREXE)
blddll_c: $(TARDLL)
bldslb_c: $(TARSLB)

$(TAREXE): $(APPOBJS)
	$(ECHO) "Linking [$@] ..."
	$(LD) -o $@ $(APPOBJS) $(APP_LDDFLGS) $(EXE_LINK)
	$(ECHO) "==========>> Excute File [$@] Build Done!!!"

$(TARDLL): $(APPOBJS)
	$(ECHO) "Linking [$@] ..."
	$(LD) -o $@ $(APPOBJS) $(APP_LDDFLGS) $(DLL_LINK)
	$(ECHO) "==========>> Dynamic Library File [$@] Build Done!!!"

$(TARSLB): $(APPOBJS)
	$(ECHO) "Linking [$@] ..."
	$(AR) $@ $(APPOBJS) $(APP_LDDFLGS) $(SLB_LINK)
	$(ECHO) "==========>> Static Library File [$@] Build Done!!!"

cleanup:
	@$(RM) $(APPOBJS) $(TAR_NAME)
	$(ECHO) "$(APPOBJS) $(TAR_NAME) cleaned"

%.o: %.c
	$(CC) $(CMP_FLGS) $(APP_CMPFLGS) -o $@ -c $<

%.o: %.cpp
	$(CC) $(CMP_FLGS) $(APP_CMPFLGS) -o $@ -c $<
